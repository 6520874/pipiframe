{"version":3,"sources":["assets/Script/ui/UIView.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,8CAA6C;AAE7C;;;;;;;;;;;;;;;;;GAiBG;AAEG,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAE5C,aAAa;AACb,IAAY,WAIX;AAJD,WAAY,WAAW;IACnB,6DAAY,CAAA;IACZ,yDAAU,CAAA;IACV,qDAAQ,CAAA;AACZ,CAAC,EAJW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAItB;AAAA,CAAC;AAGF;IAA4B,0BAAS;IADrC;QAAA,qEA6DC;QA1DG,WAAW;QAEX,gBAAU,GAAY,KAAK,CAAC;QAC5B,0BAA0B;QAC1B,YAAY;QACZ,gCAAgC;QAChC,WAAW;QAEX,WAAK,GAAY,KAAK,CAAC;QACvB,aAAa;QAEb,cAAQ,GAAgB,WAAW,CAAC,QAAQ,CAAC;QAE7C,WAAW;QACJ,UAAI,GAAW,CAAC,CAAC;;IA4C5B,CAAC;IAxCG,sDAAsD;IACtD;;;OAGG;IACI,qBAAI,GAAX;QAAY,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,yBAAO;;IAEnB,CAAC;IAED;;;;OAIG;IACI,uBAAM,GAAb,UAAc,MAAc;QAAE,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,6BAAO;;IAErC,CAAC;IAED;;OAEG;IACI,8BAAa,GAApB;IACA,CAAC;IAED;;;OAGG;IACI,wBAAO,GAAd;IAEA,CAAC;IAED;;;;OAIG;IACI,sBAAK,GAAZ,UAAa,KAAa;QAAE,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,6BAAO;;IAEnC,CAAC;IA1CD,0BAA0B;IACX,cAAO,GAAW,CAAC,CAAC;IAdnC;QADC,QAAQ;8CACmB;IAM5B;QADC,QAAQ;yCACc;IAGvB;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;4CACI;IAbpC,MAAM;QADlB,OAAO;OACK,MAAM,CA4DlB;IAAD,aAAC;CA5DD,AA4DC,CA5D2B,qBAAS,GA4DpC;AA5DY,wBAAM","file":"","sourceRoot":"/","sourcesContent":["import { ResKeeper } from \"../res/ResKeeper\";\r\n\r\n/**\r\n * UIView界面基础类\r\n * \r\n * 1. 快速关闭与屏蔽点击的选项配置\r\n * 2. 界面缓存设置（开启后界面关闭不会被释放，以便下次快速打开）\r\n * 3. 界面显示类型配置\r\n * \r\n * 4. 加载资源接口（随界面释放自动释放），this.loadRes(xxx)\r\n * 5. 由UIManager释放\r\n * \r\n * 5. 界面初始化回调（只调用一次）\r\n * 6. 界面打开回调（每次打开回调）\r\n * 7. 界面打开动画播放结束回调（动画播放完回调）\r\n * 8. 界面关闭回调\r\n * 9. 界面置顶回调\r\n * \r\n * 2018-8-28 by 宝爷\r\n */\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n/** 界面展示类型 */\r\nexport enum UIShowTypes {\r\n    UIFullScreen,       // 全屏显示，全屏界面使用该选项可获得更高性能\r\n    UIAddition,         // 叠加显示，性能较差\r\n    UISingle,           // 单界面显示，只显示当前界面和背景界面，性能较好\r\n};\r\n\r\n@ccclass\r\nexport class UIView extends ResKeeper {\r\n\r\n    /** 快速关闭 */\r\n    @property\r\n    quickClose: boolean = false;\r\n    /** 屏蔽点击选项 在UIConf设置屏蔽点击*/\r\n    // @property\r\n    // preventTouch: boolean = true;\r\n    /** 缓存选项 */\r\n    @property\r\n    cache: boolean = false;\r\n    /** 界面显示类型 */\r\n    @property({ type: cc.Enum(UIShowTypes) })\r\n    showType: UIShowTypes = UIShowTypes.UISingle;\r\n\r\n    /** 界面id */\r\n    public UIid: number = 0;\r\n    /**  静态变量，用于区分相同界面的不同实例 */\r\n    private static uiIndex: number = 0;\r\n\r\n    /********************** UI的回调 ***********************/\r\n    /**\r\n     * 当界面被创建时回调，生命周期内只调用\r\n     * @param args 可变参数\r\n     */\r\n    public init(...args): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 当界面被打开时回调，每次调用Open时回调\r\n     * @param fromUI 从哪个UI打开的\r\n     * @param args 可变参数\r\n     */\r\n    public onOpen(fromUI: number, ...args): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 每次界面Open动画播放完毕时回调\r\n     */\r\n    public onOpenAniOver(): void {\r\n    }\r\n\r\n    /**\r\n     * 当界面被关闭时回调，每次调用Close时回调\r\n     * 返回值会传递给下一个界面\r\n     */\r\n    public onClose(): any {\r\n\r\n    }\r\n\r\n    /**\r\n     * 当界面被置顶时回调，Open时并不会回调该函数\r\n     * @param preID 前一个ui\r\n     * @param args 可变参数，\r\n     */\r\n    public onTop(preID: number, ...args): void {\r\n\r\n    }\r\n}\r\n"]}