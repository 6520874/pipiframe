{"version":3,"sources":["assets/Script/example/ResKeeperExample.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { ResLeakChecker } from \"../res/ResLeakChecker\";\r\nimport ResLoader, { resLoader } from \"../res/ResLoader\";\r\nimport { ResUtil } from \"../res/ResUtil\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NetExample extends cc.Component {\r\n    @property(cc.Boolean)\r\n    resUtilMode = true;\r\n    @property(cc.Node)\r\n    attachNode: cc.Node = null;\r\n    @property(cc.Label)\r\n    dumpLabel: cc.Label = null;\r\n    checker = new ResLeakChecker();\r\n\r\n    start() {\r\n        this.checker.startCheck();\r\n    }\r\n\r\n    onAdd() {\r\n        ResLoader.load(\"prefabDir/HelloWorld\", cc.Prefab, (error: Error, prefab: cc.Prefab) => {\r\n            if (!error) {\r\n                let myNode = ResUtil.instantiate(prefab);\r\n                myNode.parent = this.attachNode;\r\n                myNode.setPosition((Math.random() * 500) - 250, myNode.position.y);\r\n                console.log(myNode.position);\r\n                prefab.decRef();\r\n            }\r\n        });\r\n    }\r\n\r\n    onSub() {\r\n        if (this.attachNode.childrenCount > 0) {\r\n            this.attachNode.children[this.attachNode.childrenCount - 1].destroy();\r\n        }\r\n    }\r\n\r\n    onAssign() {\r\n        ResLoader.load(\"images/test\", cc.SpriteFrame, (error: Error, sp: cc.SpriteFrame) => {\r\n            this.checker.traceAsset(sp);\r\n            if (this.attachNode.childrenCount > 0) {\r\n                let targetNode = this.attachNode.children[this.attachNode.childrenCount - 1];\r\n                targetNode.getComponent(cc.Sprite).spriteFrame = ResUtil.assignWith(sp, targetNode, true);\r\n            }\r\n            sp.decRef();\r\n        });\r\n    }\r\n\r\n    onClean() {\r\n        this.attachNode.destroyAllChildren();\r\n    }\r\n\r\n    onDump() {\r\n        this.checker.dump();\r\n        let Loader: any = cc.loader;\r\n        this.dumpLabel.string = `当前资源总数:${Object.keys(Loader._cache).length}`;\r\n    }\r\n\r\n    onLoadClick() {\r\n        cc.director.loadScene(\"example_empty\");\r\n    }\r\n\r\n    onPreloadClick() {\r\n        cc.director.preloadScene(\"example_empty\");\r\n    }\r\n}\r\n"]}