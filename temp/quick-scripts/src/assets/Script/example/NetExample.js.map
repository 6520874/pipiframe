{"version":3,"sources":["assets/Script/example/NetExample.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { WebSock } from \"../network/WebSock\";\nimport { NetManager } from \"../network/NetManager\";\nimport { NetNode } from \"../network/NetNode\";\nimport { DefStringProtocol, NetData, INetworkTips } from \"../network/NetInterface\";\n\n\n\nconst { ccclass, property } = cc._decorator;\n\nclass NetTips implements INetworkTips {\n    private getLabel(): cc.Label {\n        let label = null;\n        let node = cc.director.getScene().getChildByName(\"@net_tip_label\");\n        if (node) {\n            label = node.getComponent(cc.Label);\n        } else {\n            node = new cc.Node(\"@net_tip_label\");\n            label = node.addComponent(cc.Label);\n            node.setPosition(cc.winSize.width / 2, cc.winSize.height / 2);\n        }\n        return label;\n    }\n\n    connectTips(isShow: boolean): void {\n        if (isShow) {\n            this.getLabel().string = \"Connecting\";\n            this.getLabel().node.active = true;\n        } else {\n            this.getLabel().node.active = false;\n        }\n    }\n\n    reconnectTips(isShow: boolean): void {\n        if (isShow) {\n            this.getLabel().string = \"Reconnecting\";\n            this.getLabel().node.active = true;\n        } else {\n            this.getLabel().node.active = false;\n        }\n    }\n\n    requestTips(isShow: boolean): void {\n        if (isShow) {\n            this.getLabel().string = \"Requesting\";\n            this.getLabel().node.active = true;\n        } else {\n            this.getLabel().node.active = false;\n        }\n    }\n}\n\n@ccclass\nexport default class NetExample extends cc.Component {\n    @property(cc.Label)\n    textLabel: cc.Label = null;\n    @property(cc.Label)\n    urlLabel: cc.Label = null;\n    @property(cc.RichText)\n    msgLabel: cc.RichText = null;\n    private lineCount: number = 0;\n\n    onLoad() {\n        let Node = new NetNode();\n        Node.init(new WebSock(), new DefStringProtocol(), new NetTips());\n        Node.setResponeHandler(0, (cmd: number, data: NetData) => {\n            if (this.lineCount > 5) {\n                let idx = this.msgLabel.string.search(\"\\n\");\n                this.msgLabel.string = this.msgLabel.string.substr(idx + 1);\n            }\n            this.msgLabel.string += `${data}\\n`;\n            ++this.lineCount;\n        });\n        NetManager.getInstance().setNetNode(Node);\n    }\n\n    onConnectClick() {\n        NetManager.getInstance().connect({ url: this.urlLabel.string });\n    }\n\n    onSendClick() {\n        NetManager.getInstance().send(this.textLabel.string);\n    }\n\n    onDisconnectClick() {\n        NetManager.getInstance().close();\n    }\n\n    // update (dt) {}\n}\n"]}