{"version":3,"sources":["assets/Script/example/ResExample.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ResLoader, { resLoader } from \"../res/ResLoader\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NetExample extends cc.Component {\r\n    @property(cc.Node)\r\n    attachNode: cc.Node = null;\r\n    @property(cc.Label)\r\n    dumpLabel: cc.Label = null;\r\n    ress: cc.Asset[] = null;\r\n    remoteRes: cc.Asset = null;\r\n\r\n    start() {\r\n    }\r\n\r\n    onLoadRes() {\r\n        cc.loader.loadRes(\"prefabDir/HelloWorld\", cc.Prefab, (error: Error, prefab: cc.Prefab) => {\r\n            if (!error) {\r\n                cc.instantiate(prefab).parent = this.attachNode;\r\n            }\r\n        });\r\n    }\r\n\r\n    onUnloadRes() {\r\n        this.attachNode.destroyAllChildren();\r\n        cc.loader.releaseRes(\"prefabDir/HelloWorld\");\r\n    }\r\n\r\n    onMyLoadRes() {\r\n        ResLoader.loadDir(\"prefabDir\", cc.Prefab, (error: Error, prefabs: cc.Prefab[]) => {\r\n            if (!error) {\r\n                this.ress = prefabs;\r\n                for (let i = 0; i < prefabs.length; ++i) {\r\n                    cc.instantiate(prefabs[i]).parent = this.attachNode;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    onMyUnloadRes() {\r\n        this.attachNode.destroyAllChildren();\r\n        if (this.ress) {\r\n            for(let item of this.ress) {\r\n                ResLoader.release(item);\r\n            }\r\n            this.ress = null;\r\n        }\r\n    }\r\n\r\n    onLoadRemote() {\r\n        ResLoader.load(\"http://tools.itharbors.com/christmas/res/tree.png\", (err, res) => {\r\n            if (err || !res) return;\r\n            this.remoteRes = res;\r\n            let spriteFrame = new cc.SpriteFrame(res);\r\n            let node = new cc.Node(\"tmp\");\r\n            let sprite = node.addComponent(cc.Sprite);\r\n            sprite.spriteFrame = spriteFrame;\r\n            node.parent = this.attachNode;\r\n        })\r\n    }\r\n\r\n    onUnloadRemote() {\r\n        this.attachNode.destroyAllChildren();\r\n        this.remoteRes.decRef();\r\n    }\r\n\r\n    onDump() {\r\n        let Loader:any = cc.loader;\r\n        this.dumpLabel.string = `当前资源总数:${Object.keys(Loader._cache).length}`;\r\n    }\r\n}\r\n"]}